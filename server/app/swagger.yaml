openapi: '3.0.0'
info:
  version: 1.0.0
  title: 'dev-portfolio API'
  description: 'dev-portfolio API'
servers:
  - url: http://{HOST_ADDRESS}:{PORT}/
paths:
  /apis/visitor/count:
    patch:
      summary: 'Update number of visitors API'
      responses:
        '200':
          descriptoin: 'OK'
          content:
            application/json:
              schema:
                properties:
                  statusCode:
                    type: number
                    example: 200
                  todayCount:
                    type: number
                    example: 4
                  totalCount:
                    type: number
                    example: 4
        '500':
          descripiton: 'Server Error'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'

  /apis/visitor/comments:
    get:
      summary: 'Get comments API'
      responses:
        '200':
          description: 'OK'
          content:
            application/json:
              schema:
                properties:
                  statusCode:
                    type: number
                    example: 200
                  visitorComments:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: number
                          example: 1
                        nickname:
                          type: string
                          example: 'nodeDeveloper'
                        description:
                          type: string
                          example: 'the site is nice!'
                        date:
                          type: string
                          example: '2022-09-12'
        '500':
          descripiton: 'Server Error'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
  /apis/visitor/comment:
    post:
      summary: 'Create comment API'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                nickname:
                  type: string
                  example: 'nodeDeveloper'
                password:
                  type: string
                  example: '1234'
                description:
                  type: string
                  example: 'hello'
      responses:
        '201':
          description: 'Created'
          content:
            application/json:
              schema:
                properties:
                  statusCode:
                    type: number
                    example: 201
                  commentId:
                    type: number
                    example: 2
                  msg:
                    type: string
                    example: 'Successful visitor comment creation'
        '400':
          description: 'Bad Request'
          content:
            applciation/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        '500':
          descripiton: 'Server Error'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
  /apis/visitor/comment/{id}:
    patch:
      summary: 'Update comment API'
      parameters:
        - in: path
          name: id
          description: 'visitor comment id'
          required: true
          schema:
            type: number
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                password:
                  type: string
                  example: '1234'
                description:
                  type: string
                  example: 'hello!!!!'
      responses:
        '200':
          description: 'OK'
          content:
            applciation/json:
              schema:
                properties:
                  statusCode:
                    type: number
                    example: 200
                  msg:
                    type: string
                    example: 'Visitor comment update complete'
        '400':
          description: 'Bad Request'
          content:
            applciation/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        '401':
          description: 'Unauthorized'
          content:
            applciation/json:
              schema:
                properties:
                  statusCode:
                    type: number
                    example: 401
                  msg:
                    type: string
                    example: 'Passwords do not match'
        '404':
          description: 'Not Found'
          content:
            applciation/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        '500':
          description: 'Server Error'
          content:
            applciation/json:
              schema:
                $ref: '#/components/schemas/ServerError'
    delete:
      summary: 'Delete comment API'
      parameters:
        - name: id
          in: path
          description: 'visitor comment id'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'OK'
          content:
            applciation/json:
              schema:
                properties:
                  statusCode:
                    type: number
                    example: 200
                  msg:
                    type: string
                    example: 'Successful deletion of visitor comment'
        '400':
          description: 'Bad Request'
          content:
            applciation/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        '404':
          description: 'Not Found'
          content:
            applciation/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        '500':
          description: 'Server Error'
          content:
            applciation/json:
              schema:
                $ref: '#/components/schemas/ServerError'

components:
  schemas:
    ServerError:
      type: object
      properties:
        statusCode:
          type: number
          example: 500
        msg:
          type: string
          example: 'server error message'
    NotFoundError:
      type: object
      properties:
        statusCode:
          type: number
          example: 404
        msg:
          type: string
          example: 'No data exists'
    BadRequestError:
      type: object
      properties:
        statusCode:
          type: number
          example: 400
        msg:
          type: string
          example: 'error message'
